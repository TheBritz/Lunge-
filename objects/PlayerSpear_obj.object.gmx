<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>PlayerSpear_spr</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///PlayerSpear Init
m_wielder = noone;
m_strikeTimer = -1;
m_canDetonate = true;
m_chargeToDetonate = 100;
m_charge = m_chargeToDetonate;
m_chargeMax = m_chargeToDetonate;
m_isLunging = false;
m_strikeTime = 6;
m_targetType = Enemy_obj;
m_skeweredEnemies = ds_list_create();
mask_index = HitboxPlayerSpear_spr;
m_skewerHitbox = HitboxPlayerSpear_spr;
m_skewerPosX = sprite_width - sprite_xoffset - 12;
m_skewerPosY = 0;
m_imbedPosX = sprite_width - sprite_xoffset - 3;
m_imbedPointX = undefined;
m_imbedPointY = undefined;
m_imbedHitbox = HitboxPlayerSpearImbed_spr;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Attack Collision
if(PlayerSpear_CanStrike_scr(id))
{
  mask_index = m_skewerHitbox;
  var hitList = instance_place_list(x, y, m_targetType, 3);
  
  for(var i = 0; i &lt; ds_list_size(hitList) i++)
  {
    var hit = hitList[|i];
    PlayerSpear_SkewerEnemy_scr(id, hit);
  }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wall Latch Collision
if(PlayerSpear_CanStrike_scr(id) &amp;&amp; instance_exists(m_wielder) &amp;&amp; 
   Combatant_GetState_scr(m_wielder) == CombatantStates.Air)
{
  mask_index = m_imbedHitbox;
  if(place_meeting(x, y, Solid_obj))
  {
    //Find the point of entry
    var incX = lengthdir_x(2, image_angle);
    var incY = lengthdir_y(2, image_angle);
    var xx = x;
    var yy = y;
    var xMod = 0;
    var yMod = 0;
    var maxX = x + lengthdir_x(m_imbedPosX, image_angle);
    var length;
    do
    {
      hit = collision_point(x + xMod, y + yMod, Solid_obj, false, false);
      if(instance_exists(hit))
      {
        m_imbedPointX = x + xMod;
        m_imbedPointY = y + yMod;
        break;
      }
      xMod += incX;
      yMod += incY;
    }until(abs(xMod) &gt; maxX)
  }
}



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Imbed Positioning
PlayerSpear_SetAngle_scr(id, image_angle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Decrement Strike timer

m_strikeTimer -= 1 //* global.TimeSpeed
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Reset

sprite_index = PlayerSpear_spr;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
